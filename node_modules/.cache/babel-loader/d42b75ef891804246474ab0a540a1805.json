{"remainingRequest":"D:\\hbuilderWorkspace\\my-project\\node_modules\\babel-loader\\lib\\index.js!D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-preprocess-loader\\index.js??ref--12-2!D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-preprocess-loader\\index.js??ref--16-0!D:\\hbuilderWorkspace\\my-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\hbuilderWorkspace\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-scoped-loader\\index.js!D:\\hbuilderWorkspace\\my-project\\src\\components\\m-input.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\hbuilderWorkspace\\my-project\\src\\components\\m-input.vue","mtime":1546070016759},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-preprocess-loader\\index.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-preprocess-loader\\index.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\hbuilderWorkspace\\my-project\\node_modules\\@dcloudio\\vue-cli-plugin-uni\\packages\\webpack-scoped-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport mIcon from './m-icon/m-icon.vue';\nexport default {\n  components: {\n    mIcon: mIcon\n  },\n  props: {\n    /**\n     * 输入类型\n     */\n    type: String,\n\n    /**\n     * 值\n     */\n    value: String,\n\n    /**\n     * 占位符\n     */\n    placeholder: String,\n\n    /**\n     * 是否显示清除按钮\n     */\n    clearable: {\n      type: [Boolean, String],\n      default: false\n    },\n\n    /**\n     * 是否显示密码可见按钮\n     */\n    displayable: {\n      type: [Boolean, String],\n      default: false\n    },\n\n    /**\n     * 自动获取焦点\n     */\n    focus: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      /**\n       * 显示密码明文\n       */\n      showPassword: false,\n\n      /**\n       * 是否获取焦点\n       */\n      isFocus: false\n    };\n  },\n  computed: {\n    inputType: function inputType() {\n      var type = this.type;\n      return type === 'password' ? 'text' : type;\n    },\n    clearable_: function clearable_() {\n      return String(this.clearable) !== 'false';\n    },\n    displayable_: function displayable_() {\n      return String(this.displayable) !== 'false';\n    },\n    focus_: function focus_() {\n      return String(this.focus) !== 'false';\n    }\n  },\n  methods: {\n    clear: function clear() {\n      this.value = '';\n    },\n    display: function display() {\n      this.showPassword = !this.showPassword;\n    },\n    onFocus: function onFocus() {\n      this.isFocus = true;\n    },\n    onBlur: function onBlur() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.isFocus = false;\n      });\n    },\n    onInput: function onInput(e) {\n      this.$emit('input', e.target.value);\n    }\n  }\n};",{"version":3,"sources":["m-input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAA,KAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA;;;AAGA,IAAA,IAAA,EAAA,MAJA;;AAKA;;;AAGA,IAAA,KAAA,EAAA,MARA;;AASA;;;AAGA,IAAA,WAAA,EAAA,MAZA;;AAaA;;;AAGA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;;AAoBA;;;AAGA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAvBA;;AA2BA;;;AAGA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,OAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA9BA,GAJA;AAuCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAvCA;AA2CA,EAAA,IA3CA,kBA2CA;AACA,WAAA;AACA;;;AAGA,MAAA,YAAA,EAAA,KAJA;;AAKA;;;AAGA,MAAA,OAAA,EAAA;AARA,KAAA;AAUA,GAtDA;AAuDA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,IAAA,GAAA,KAAA,IAAA;AACA,aAAA,IAAA,KAAA,UAAA,GAAA,MAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AACA,aAAA,MAAA,CAAA,KAAA,SAAA,CAAA,KAAA,OAAA;AACA,KAPA;AAQA,IAAA,YARA,0BAQA;AACA,aAAA,MAAA,CAAA,KAAA,WAAA,CAAA,KAAA,OAAA;AACA,KAVA;AAWA,IAAA,MAXA,oBAWA;AACA,aAAA,MAAA,CAAA,KAAA,KAAA,CAAA,KAAA,OAAA;AACA;AAbA,GAvDA;AAsEA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,WAAA,YAAA,GAAA,CAAA,KAAA,YAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KATA;AAUA,IAAA,MAVA,oBAUA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAFA;AAGA,KAdA;AAeA,IAAA,OAfA,mBAeA,CAfA,EAeA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA;AAjBA;AAtEA,CAAA","sourcesContent":["<template>\r\n    <view class=\"m-input-view\">\r\n        <input :focus=\"focus_\" :type=\"inputType\" :value=\"value\" @input=\"onInput\" class=\"m-input-input\" :placeholder=\"placeholder\"\r\n            :password=\"type==='password'&&!showPassword\" @focus=\"onFocus\" @blur=\"onBlur\" />\r\n        <!-- 优先显示密码可见按钮 -->\n        <view v-if=\"clearable_&&!displayable_&&value.length\" class=\"m-input-icon\">\n            <m-icon color=\"#666666\" type=\"clear\" size=\"20\" @click=\"clear\"></m-icon>\n        </view>\n        <view v-if=\"displayable_\" class=\"m-input-icon\">\n            <m-icon :color=\"showPassword?'#666666':'#cccccc'\" type=\"eye\" size=\"20\" @click=\"display\"></m-icon>\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n    import mIcon from './m-icon/m-icon.vue'\r\n\r\n    export default {\r\n        components: {\r\n            mIcon\r\n        },\r\n        props: {\r\n            /**\r\n             * 输入类型\r\n             */\r\n            type: String,\r\n            /**\r\n             * 值\r\n             */\r\n            value: String,\r\n            /**\r\n             * 占位符\r\n             */\r\n            placeholder: String,\r\n            /**\r\n             * 是否显示清除按钮\r\n             */\r\n            clearable: {\r\n                type: [Boolean, String],\r\n                default: false\r\n            },\r\n            /**\r\n             * 是否显示密码可见按钮\r\n             */\r\n            displayable: {\r\n                type: [Boolean, String],\r\n                default: false\r\n            },\r\n            /**\r\n             * 自动获取焦点\r\n             */\r\n            focus: {\r\n                type: [Boolean, String],\r\n                default: false\r\n            }\r\n        },\r\n        model: {\r\n            prop: 'value',\r\n            event: 'input'\r\n        },\r\n        data() {\r\n            return {\r\n                /**\r\n                 * 显示密码明文\r\n                 */\r\n                showPassword: false,\r\n                /**\r\n                 * 是否获取焦点\r\n                 */\r\n                isFocus: false\r\n            }\r\n        },\r\n        computed: {\r\n            inputType() {\r\n                const type = this.type\r\n                return type === 'password' ? 'text' : type\r\n            },\r\n            clearable_() {\r\n                return String(this.clearable) !== 'false'\r\n            },\r\n            displayable_() {\r\n                return String(this.displayable) !== 'false'\r\n            },\r\n            focus_() {\r\n                return String(this.focus) !== 'false'\r\n            }\r\n        },\r\n        methods: {\r\n            clear() {\r\n                this.value = ''\r\n            },\r\n            display() {\r\n                this.showPassword = !this.showPassword\r\n            },\r\n            onFocus() {\r\n                this.isFocus = true\r\n            },\r\n            onBlur() {\r\n                this.$nextTick(() => {\r\n                    this.isFocus = false\r\n                })\r\n            },\r\n            onInput(e) {\r\n                this.$emit('input', e.target.value)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .m-input-view {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex: 1;\r\n        padding: 0 10rpx;\r\n    }\r\n\r\n    .m-input-input {\r\n        flex: 1;\r\n        width: 100%;\r\n    }\n    \n    .m-input-icon{\n        width: 20px;\n    }\r\n</style>\n"],"sourceRoot":"src\\components"}]}